{"ast":null,"code":"import fetchAPI from '../services/fetchAPI';\nexport const INPUT_CHANGE = 'INPUT_CHANGE';\nexport const REQUEST_API = 'REQUEST_API';\nexport const REQUEST_API_SUCCESS = 'REQUEST_API_SUCCESS';\nexport const REQUEST_API_FAILURE = 'REQUEST_API_FAILURE';\nexport const handleChange = value => ({\n  type: INPUT_CHANGE,\n  value\n});\n\nconst requestAPI = () => ({\n  type: REQUEST_API\n});\n\nconst requestSUCCESS = data => ({\n  type: REQUEST_API_SUCCESS,\n  data: data.map(d => d.data)\n});\n\nconst requestFAILURE = error => ({\n  type: REQUEST_API_FAILURE,\n  error\n});\n\nexport const getAPI = search => {\n  return dispatch => {\n    dispatch(requestAPI());\n    return fetchAPI(search).then(json => dispatch(requestSUCCESS(json.data.children)), error => dispatch(requestFAILURE(error.message)));\n  };\n};","map":{"version":3,"sources":["/home/anicioalexandre/alexandreLOCAL/trybe/Front-end/block 18 - contextAPI & hooks/reddit_api/src/actions/index.js"],"names":["fetchAPI","INPUT_CHANGE","REQUEST_API","REQUEST_API_SUCCESS","REQUEST_API_FAILURE","handleChange","value","type","requestAPI","requestSUCCESS","data","map","d","requestFAILURE","error","getAPI","search","dispatch","then","json","children","message"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,sBAArB;AAEA,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAEP,OAAO,MAAMC,YAAY,GAAIC,KAAD,KAAY;AACtCC,EAAAA,IAAI,EAAEN,YADgC;AAEtCK,EAAAA;AAFsC,CAAZ,CAArB;;AAKP,MAAME,UAAU,GAAG,OAAO;AACxBD,EAAAA,IAAI,EAAEL;AADkB,CAAP,CAAnB;;AAIA,MAAMO,cAAc,GAAIC,IAAD,KAAW;AAChCH,EAAAA,IAAI,EAAEJ,mBAD0B;AAEhCO,EAAAA,IAAI,EAAEA,IAAI,CAACC,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACF,IAAlB;AAF0B,CAAX,CAAvB;;AAKA,MAAMG,cAAc,GAAIC,KAAD,KAAY;AACjCP,EAAAA,IAAI,EAAEH,mBAD2B;AAEjCU,EAAAA;AAFiC,CAAZ,CAAvB;;AAKA,OAAO,MAAMC,MAAM,GAAIC,MAAD,IAAY;AAChC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACT,UAAU,EAAX,CAAR;AACA,WAAOR,QAAQ,CAACgB,MAAD,CAAR,CAAiBE,IAAjB,CACJC,IAAD,IAAUF,QAAQ,CAACR,cAAc,CAACU,IAAI,CAACT,IAAL,CAAUU,QAAX,CAAf,CADb,EAEJN,KAAD,IAAWG,QAAQ,CAACJ,cAAc,CAACC,KAAK,CAACO,OAAP,CAAf,CAFd,CAAP;AAID,GAND;AAOD,CARM","sourcesContent":["import fetchAPI from '../services/fetchAPI';\n\nexport const INPUT_CHANGE = 'INPUT_CHANGE';\nexport const REQUEST_API = 'REQUEST_API';\nexport const REQUEST_API_SUCCESS = 'REQUEST_API_SUCCESS';\nexport const REQUEST_API_FAILURE = 'REQUEST_API_FAILURE';\n\nexport const handleChange = (value) => ({\n  type: INPUT_CHANGE,\n  value,\n});\n\nconst requestAPI = () => ({\n  type: REQUEST_API,\n});\n\nconst requestSUCCESS = (data) => ({\n  type: REQUEST_API_SUCCESS,\n  data: data.map((d) => d.data),\n});\n\nconst requestFAILURE = (error) => ({\n  type: REQUEST_API_FAILURE,\n  error,\n});\n\nexport const getAPI = (search) => {\n  return (dispatch) => {\n    dispatch(requestAPI());\n    return fetchAPI(search).then(\n      (json) => dispatch(requestSUCCESS(json.data.children)),\n      (error) => dispatch(requestFAILURE(error.message))\n    );\n  };\n};\n"]},"metadata":{},"sourceType":"module"}